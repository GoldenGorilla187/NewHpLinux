From 08a817b27bb7ec023d740bc6cfe94c1cdf30fb50 Mon Sep 17 00:00:00 2001
From: Paul Gofman <pgofman@codeweavers.com>
Date: Tue, 15 Dec 2020 00:09:55 +0300
Subject: [PATCH] ntdll: Fixup builtin dll names in get_section_name().

---
 dlls/ntdll/tests/info.c   |  2 +-
 dlls/ntdll/unix/virtual.c | 31 +++++++++++++++++++++++++++++++
 2 files changed, 32 insertions(+), 1 deletion(-)

diff --git a/dlls/ntdll/tests/info.c b/dlls/ntdll/tests/info.c
index d9531e465c1a..3083dbb3d18f 100644
--- a/dlls/ntdll/tests/info.c
+++ b/dlls/ntdll/tests/info.c
@@ -2347,7 +2347,7 @@ static void test_queryvirtualmemory(void)
     memset(msn, 0x55, sizeof(*msn));
     memset(buffer_name, 0x77, sizeof(buffer_name));
     readcount = 0;
-    status = pNtQueryVirtualMemory(NtCurrentProcess(), module, MemorySectionName, msn, sizeof(buffer_name), &readcount);
+    status = pNtQueryVirtualMemory(NtCurrentProcess(), (char *)module + 0x100, MemorySectionName, msn, sizeof(buffer_name), &readcount);
     ok( status == STATUS_SUCCESS, "Expected STATUS_SUCCESS, got %08x\n", status);
     ok( readcount > 0, "Expected readcount to be > 0\n");
     pRtlDowncaseUnicodeString( &msn->SectionFileName, &msn->SectionFileName, FALSE );
diff --git a/dlls/ntdll/unix/virtual.c b/dlls/ntdll/unix/virtual.c
index 3d1b3cecacb8..4f5d213285cb 100644
--- a/dlls/ntdll/unix/virtual.c
+++ b/dlls/ntdll/unix/virtual.c
@@ -4026,6 +4026,36 @@ static NTSTATUS get_working_set_ex( HANDLE process, LPCVOID addr,
     return STATUS_SUCCESS;
 }
 
+static char *replace_wine_dir_with_system_dir( char *name )
+{
+    static const char system32_dir_suffix[] = "drive_c/Windows/System32";
+    static const char syswow64_dir_suffix[] = "drive_c/Windows/SysWOW64";
+    unsigned int i, sysdir_length, dll_path_length, size;
+    const char *system_dir;
+    char *new_name;
+
+    for (i = 0; dll_paths[i]; ++i)
+    {
+        dll_path_length = strlen( dll_paths[i] );
+        if (!strncmp( name, dll_paths[i], dll_path_length))
+        {
+            system_dir = is_wow64 ? syswow64_dir_suffix : system32_dir_suffix;
+            sysdir_length = strlen( config_dir ) + 1 + strlen( system_dir );
+            size = strlen( name ) - dll_path_length + sysdir_length + 1;
+            if (!(new_name = malloc( size )))
+            {
+                ERR("No memory.\n");
+                return name;
+            }
+            sprintf( new_name, "%s/%s", config_dir, system_dir );
+            strcat( new_name, name + dll_path_length );
+            free( name );
+            return new_name;
+        }
+    }
+    return name;
+}
+
 /* get file name for mapped section */
 static NTSTATUS get_section_name( HANDLE process, LPCVOID addr,
                                   MEMORY_SECTION_NAME *info,
@@ -4061,6 +4091,7 @@ static NTSTATUS get_section_name( HANDLE process, LPCVOID addr,
         NtClose( mapping );
         if (!status)
         {
+            unix_name = replace_wine_dir_with_system_dir( unix_name );
             status = unix_to_nt_file_name( unix_name, &nt_nameW );
             free( unix_name );
         }
-- 
2.29.2

