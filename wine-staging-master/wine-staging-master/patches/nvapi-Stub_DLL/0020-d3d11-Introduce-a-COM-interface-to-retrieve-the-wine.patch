From 0b292f9ebd14638de48420184e065ce7ec9c4126 Mon Sep 17 00:00:00 2001
From: Zebediah Figura <z.figura12@gmail.com>
Date: Sat, 22 May 2021 18:05:40 -0500
Subject: [PATCH] d3d11: Introduce a COM interface to retrieve the
 wined3d_device_context associated with an object.

---
 dlls/d3d11/d3d11_private.h |   2 +
 dlls/d3d11/device.c        | 100 +++++++++++++++++++++++++++++++++++++
 include/wine/winedxgi.idl  |  10 ++++
 3 files changed, 112 insertions(+)

diff --git a/dlls/d3d11/d3d11_private.h b/dlls/d3d11/d3d11_private.h
index efe26551258..6079a8ad2db 100644
--- a/dlls/d3d11/d3d11_private.h
+++ b/dlls/d3d11/d3d11_private.h
@@ -546,6 +546,7 @@ struct d3d11_device_context
     ID3D11DeviceContext1 ID3D11DeviceContext1_iface;
     ID3D11Multithread ID3D11Multithread_iface;
     ID3DUserDefinedAnnotation ID3DUserDefinedAnnotation_iface;
+    IWineD3DDeviceContext IWineD3DDeviceContext_iface;
     LONG refcount;
 
     D3D11_DEVICE_CONTEXT_TYPE type;
@@ -562,6 +563,7 @@ struct d3d_device
     ID3D11Device2 ID3D11Device2_iface;
     ID3D10Device1 ID3D10Device1_iface;
     ID3D10Multithread ID3D10Multithread_iface;
+    IWineD3DDeviceContext IWineD3DDeviceContext_iface;
     IWineDXGIDeviceParent IWineDXGIDeviceParent_iface;
     IUnknown *outer_unk;
     LONG refcount;
diff --git a/dlls/d3d11/device.c b/dlls/d3d11/device.c
index f0cbb1741ab..82419b2a5bc 100644
--- a/dlls/d3d11/device.c
+++ b/dlls/d3d11/device.c
@@ -3191,6 +3191,61 @@ static const struct ID3D11MultithreadVtbl d3d11_multithread_vtbl =
     d3d11_multithread_GetMultithreadProtected,
 };
 
+/* IWineD3DDeviceContext methods */
+
+static inline struct d3d11_device_context *context_from_IWineD3DDeviceContext(IWineD3DDeviceContext *iface)
+{
+    return CONTAINING_RECORD(iface, struct d3d11_device_context, IWineD3DDeviceContext_iface);
+}
+
+static HRESULT STDMETHODCALLTYPE context_d3d_device_context_QueryInterface(IWineD3DDeviceContext *iface,
+        REFIID iid, void **out)
+{
+    struct d3d11_device_context *context = context_from_IWineD3DDeviceContext(iface);
+
+    TRACE("iface %p, iid %s, out %p.\n", iface, debugstr_guid(iid), out);
+
+    return d3d11_device_context_QueryInterface(&context->ID3D11DeviceContext1_iface, iid, out);
+}
+
+static ULONG STDMETHODCALLTYPE context_d3d_device_context_AddRef(IWineD3DDeviceContext *iface)
+{
+    struct d3d11_device_context *context = context_from_IWineD3DDeviceContext(iface);
+
+    TRACE("iface %p.\n", iface);
+
+    return d3d11_device_context_AddRef(&context->ID3D11DeviceContext1_iface);
+}
+
+static ULONG STDMETHODCALLTYPE context_d3d_device_context_Release(IWineD3DDeviceContext *iface)
+{
+    struct d3d11_device_context *context = context_from_IWineD3DDeviceContext(iface);
+
+    TRACE("iface %p.\n", iface);
+
+    return d3d11_device_context_Release(&context->ID3D11DeviceContext1_iface);
+}
+
+static struct wined3d_device_context * STDMETHODCALLTYPE context_d3d_device_context_get_wined3d_device_context(
+        IWineD3DDeviceContext *iface)
+{
+    struct d3d11_device_context *context = context_from_IWineD3DDeviceContext(iface);
+
+    TRACE("iface %p.\n", iface);
+
+    return context->wined3d_context;
+}
+
+static const struct IWineD3DDeviceContextVtbl context_d3d_device_context_vtbl =
+{
+    /* IUnknown methods */
+    context_d3d_device_context_QueryInterface,
+    context_d3d_device_context_AddRef,
+    context_d3d_device_context_Release,
+    /* IWineD3DDeviceContext methods */
+    context_d3d_device_context_get_wined3d_device_context,
+};
+
 /* ID3DUserDefinedAnnotation methods */
 
 static inline struct d3d11_device_context *impl_from_ID3DUserDefinedAnnotation(ID3DUserDefinedAnnotation *iface)
@@ -3271,6 +3326,7 @@ static void d3d11_device_context_init(struct d3d11_device_context *context, stru
     context->ID3D11DeviceContext1_iface.lpVtbl = &d3d11_device_context_vtbl;
     context->ID3D11Multithread_iface.lpVtbl = &d3d11_multithread_vtbl;
     context->ID3DUserDefinedAnnotation_iface.lpVtbl = &d3d11_user_defined_annotation_vtbl;
+    context->IWineD3DDeviceContext_iface.lpVtbl = &context_d3d_device_context_vtbl;
     context->refcount = 1;
     context->type = type;
 
@@ -6695,6 +6751,49 @@ static const struct ID3D10MultithreadVtbl d3d10_multithread_vtbl =
     d3d10_multithread_GetMultithreadProtected,
 };
 
+/* IWineD3DDeviceContext methods */
+
+static inline struct d3d_device *device_from_IWineD3DDeviceContext(IWineD3DDeviceContext *iface)
+{
+    return CONTAINING_RECORD(iface, struct d3d_device, IWineD3DDeviceContext_iface);
+}
+
+static HRESULT STDMETHODCALLTYPE device_d3d_device_context_QueryInterface(IWineD3DDeviceContext *iface,
+        REFIID iid, void **out)
+{
+    struct d3d_device *device = device_from_IWineD3DDeviceContext(iface);
+    return IUnknown_QueryInterface(device->outer_unk, iid, out);
+}
+
+static ULONG STDMETHODCALLTYPE device_d3d_device_context_AddRef(IWineD3DDeviceContext *iface)
+{
+    struct d3d_device *device = device_from_IWineD3DDeviceContext(iface);
+    return IUnknown_AddRef(device->outer_unk);
+}
+
+static ULONG STDMETHODCALLTYPE device_d3d_device_context_Release(IWineD3DDeviceContext *iface)
+{
+    struct d3d_device *device = device_from_IWineD3DDeviceContext(iface);
+    return IUnknown_Release(device->outer_unk);
+}
+
+static struct wined3d_device_context * STDMETHODCALLTYPE device_d3d_device_context_get_wined3d_device_context(
+        IWineD3DDeviceContext *iface)
+{
+    struct d3d_device *device = device_from_IWineD3DDeviceContext(iface);
+    return device->immediate_context.wined3d_context;
+}
+
+static const struct IWineD3DDeviceContextVtbl device_d3d_device_context_vtbl =
+{
+    /* IUnknown methods */
+    device_d3d_device_context_QueryInterface,
+    device_d3d_device_context_AddRef,
+    device_d3d_device_context_Release,
+    /* IWineD3DDeviceContext methods */
+    device_d3d_device_context_get_wined3d_device_context,
+};
+
 /* IWineDXGIDeviceParent IUnknown methods */
 
 static inline struct d3d_device *device_from_dxgi_device_parent(IWineDXGIDeviceParent *iface)
@@ -6898,6 +6997,7 @@ void d3d_device_init(struct d3d_device *device, void *outer_unknown)
     device->ID3D11Device2_iface.lpVtbl = &d3d11_device_vtbl;
     device->ID3D10Device1_iface.lpVtbl = &d3d10_device1_vtbl;
     device->ID3D10Multithread_iface.lpVtbl = &d3d10_multithread_vtbl;
+    device->IWineD3DDeviceContext_iface.lpVtbl = &device_d3d_device_context_vtbl;
     device->IWineDXGIDeviceParent_iface.lpVtbl = &d3d_dxgi_device_parent_vtbl;
     device->device_parent.ops = &d3d_wined3d_device_parent_ops;
     device->refcount = 1;
diff --git a/include/wine/winedxgi.idl b/include/wine/winedxgi.idl
index 83012047ea7..3c910376cc7 100644
--- a/include/wine/winedxgi.idl
+++ b/include/wine/winedxgi.idl
@@ -92,3 +92,13 @@ interface IWineDXGIAdapter : IDXGIAdapter4
 interface IWineDXGIFactory : IDXGIFactory7
 {
 }
+
+[
+    object,
+    local,
+    uuid(18044258-baef-418b-9c2e-0eeca45b31f5)
+]
+interface IWineD3DDeviceContext : IUnknown
+{
+    struct wined3d_device_context *get_wined3d_device_context();
+}
-- 
2.34.1

